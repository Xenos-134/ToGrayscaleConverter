
// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using ToGrayscaleConverter;


namespace TrainedModel
{
    public class Program
    {
        static void Main(string[] args)
        {
            while (true)
            {
                Console.Write("Indique caminho para a imagem que pretende classificar: ");
                string path = Console.ReadLine();
                using (StreamWriter outputFileTest = new StreamWriter("C:/Users/artem/Desktop/AI/PreProcess/testOutput.txt"))
                {
                    string value2 = ToGrayscaleConverter.ExtractorProgram.ExtractProperties(path, outputFileTest, null);
                    Predict(value2);
                }

            }
        }


        public static void Predict(string vector)
        {
            MLModel.ModelInput model = new MLModel.ModelInput();
            PropertyInfo[] properties = model.GetType().GetProperties();

            List<int> values = vector.Split(',').Select(int.Parse).ToList();

            //Lists all prediction
            int counter = 0;
            int x = values.Count;


            foreach (var property in properties)
            {
                if (property.Name == "Col0") continue;
                property.SetValue(model, values[counter++]);
            }


            // Make a single prediction on the sample data and print results
            var predictionResult = MLModel.Predict(model);
            Console.WriteLine($"Predicted Col0: {predictionResult.Prediction}\n\n");
        }
    }
}
